// <auto-generated />
using System;
using LaDanse.Target;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LaDanse.Target.Migrations
{
    [DbContext(typeof(TargetDbContext))]
    partial class TargetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnName("endTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FromTime")
                        .HasColumnName("fromTime")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("GameCharacterId")
                        .HasColumnName("gameCharacterId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterId")
                        .HasName("IDX_E115ED785AF690F3");

                    b.HasIndex("UserId")
                        .HasName("IDX_E115ED7862DEB3E8");

                    b.ToTable("GameCharacterClaim");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaimVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("TEXT")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnName("endTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FromTime")
                        .HasColumnName("fromTime")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("GameCharacterClaimId")
                        .HasColumnName("gameCharacterClaimId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<bool>("IsRaider")
                        .HasColumnName("isRaider")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterClaimId")
                        .HasName("IDX_C33F42E09113A92D");

                    b.ToTable("GameCharacterClaimVersion");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.PlaysGameRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnName("endTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FromTime")
                        .HasColumnName("fromTime")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("GameCharacterClaimId")
                        .HasColumnName("gameCharacterClaimId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<sbyte>("GameRole")
                        .HasColumnName("gameRole")
                        .HasColumnType("TINYINT");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterClaimId")
                        .HasName("IDX_7A9E9B239113A92D");

                    b.ToTable("PlaysGameRole");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Comments.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid>("GroupId")
                        .HasColumnName("groupId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnName("message")
                        .HasColumnType("varchar(4096)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime>("PostDate")
                        .HasColumnName("postDate")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("PosterId")
                        .HasColumnName("posterId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("GroupId")
                        .HasName("IDX_5BC96BF0ED8188B0");

                    b.HasIndex("PosterId")
                        .HasName("IDX_5BC96BF0581A197");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Comments.CommentGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime>("PostDate")
                        .HasColumnName("postDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("CommentGroup");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid>("CommentGroupId")
                        .HasColumnName("commentGroupId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(4096)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime>("EndTime")
                        .HasColumnName("endTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("InviteTime")
                        .HasColumnName("inviteTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("LastModifiedTime")
                        .HasColumnName("lastModifiedTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid>("OrganiserId")
                        .HasColumnName("organiserId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime>("StartTime")
                        .HasColumnName("startTime")
                        .HasColumnType("DATETIME");

                    b.Property<sbyte>("State")
                        .HasColumnName("state")
                        .HasColumnType("TINYINT");

                    b.HasKey("Id");

                    b.HasIndex("CommentGroupId");

                    b.HasIndex("OrganiserId")
                        .HasName("IDX_FA6F25A34BDD3C8");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.SignUp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid>("EventId")
                        .HasColumnName("eventId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<sbyte>("Type")
                        .HasColumnName("type")
                        .HasColumnType("TINYINT");

                    b.Property<Guid>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .HasName("IDX_DC8B3F7B2B2EBB6C");

                    b.HasIndex("UserId")
                        .HasName("IDX_DC8B3F7B62DEB3E8");

                    b.ToTable("SignUp");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.SignedForGameRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<sbyte>("GameRole")
                        .HasColumnName("gameRole")
                        .HasColumnType("TINYINT");

                    b.Property<Guid>("SignUpId")
                        .HasColumnName("signUpId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("SignUpId")
                        .HasName("IDX_16186B55A966702F");

                    b.ToTable("SignedForGameRole");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Forum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("TEXT")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime?>("LastPostDate")
                        .HasColumnName("lastPostDate")
                        .HasColumnType("DATETIME");

                    b.Property<Guid?>("LastPostPosterId")
                        .HasColumnName("lastPostPosterId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid?>("LastPostTopicId")
                        .HasColumnName("lastPostTopicId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("LastPostPosterId")
                        .HasName("IDX_44EA91C922F0147C");

                    b.HasIndex("LastPostTopicId")
                        .IsUnique()
                        .HasName("IDX_44EA91C91CA16452");

                    b.ToTable("Forum");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.ForumLastVisit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime>("LastVisitDate")
                        .HasColumnName("lastVisitDate")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasName("IDX_F17408662DEB3E8");

                    b.ToTable("ForumLastVisit");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnName("message")
                        .HasColumnType("varchar(8192)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime>("PostDate")
                        .HasColumnName("postDate")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("PosterId")
                        .HasColumnName("posterId")
                        .HasColumnType("CHAR(36)")
                        .HasComment("CHAR(36)");

                    b.Property<Guid>("TopicId")
                        .HasColumnName("topicId")
                        .HasColumnType("CHAR(36)")
                        .HasComment("CHAR(36)");

                    b.HasKey("Id");

                    b.HasIndex("PosterId")
                        .HasName("IDX_FAB8C3B3581A197");

                    b.HasIndex("TopicId")
                        .HasName("IDX_FAB8C3B3E2E0EAFB");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid>("ForumId")
                        .HasColumnName("forumId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime?>("LastPostDate")
                        .HasColumnName("lastPostDate")
                        .HasColumnType("DATETIME");

                    b.Property<Guid?>("LastPostPosterId")
                        .HasColumnName("lastPostPosterId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime>("PostDate")
                        .HasColumnName("postDate")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("PosterId")
                        .HasColumnName("posterId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnName("subject")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("ForumId")
                        .HasName("IDX_5C81F11F7830F151");

                    b.HasIndex("LastPostPosterId")
                        .HasName("IDX_5C81F11F22F0147C");

                    b.HasIndex("PosterId")
                        .HasName("IDX_5C81F11F581A197");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.UnreadPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid>("PostId")
                        .HasColumnName("postId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("PostId")
                        .HasName("IDX_6B0B9B3EE094D20D");

                    b.HasIndex("UserId")
                        .HasName("IDX_6B0B9B3E62DEB3E8");

                    b.ToTable("UnreadPost");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameCharacter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnName("endTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FromTime")
                        .HasColumnName("fromTime")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("GameRealmId")
                        .HasColumnName("gameRealmId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("GameRealmId")
                        .HasName("IDX_92AF3B34FA96DBDA");

                    b.ToTable("GameCharacter");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameCharacterVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnName("endTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FromTime")
                        .HasColumnName("fromTime")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("GameCharacterId")
                        .HasColumnName("gameCharacterId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid>("GameClassId")
                        .HasColumnName("gameClassId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid>("GameRaceId")
                        .HasColumnName("gameRaceId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<uint>("Level")
                        .HasColumnName("level")
                        .HasColumnType("INT UNSIGNED");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterId")
                        .HasName("IDX_A70EBD185AF690F3");

                    b.HasIndex("GameClassId")
                        .HasName("IDX_A70EBD18F3B4E37B");

                    b.HasIndex("GameRaceId")
                        .HasName("IDX_A70EBD18E036C39A");

                    b.ToTable("GameCharacterVersion");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameGuild", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<uint>("GameId")
                        .HasColumnName("gameId")
                        .HasColumnType("INT UNSIGNED");

                    b.Property<Guid>("GameRealmId")
                        .HasColumnName("gameRealmId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("GameRealmId")
                        .HasName("IDX_B48152AFFA96DBDA");

                    b.ToTable("GameGuild");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.InGameGuild", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnName("endTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FromTime")
                        .HasColumnName("fromTime")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("GameCharacterId")
                        .HasColumnName("gameCharacterId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid>("GameGuildId")
                        .HasColumnName("gameGuildId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterId")
                        .HasName("IDX_CA2244C5AF690F3");

                    b.HasIndex("GameGuildId")
                        .HasName("IDX_CA2244C75407DAB");

                    b.ToTable("InGameGuild");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Core.GameClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<uint>("GameId")
                        .HasColumnName("gameId")
                        .HasColumnType("INT UNSIGNED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.ToTable("GameClass");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Core.GameFaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<uint>("GameId")
                        .HasColumnName("gameId")
                        .HasColumnType("INT UNSIGNED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.ToTable("GameFaction");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Core.GameRace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid>("GameFactionId")
                        .HasColumnName("gameFactionId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<uint>("GameId")
                        .HasColumnName("gameId")
                        .HasColumnType("INT UNSIGNED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("GameFactionId")
                        .HasName("IDX_D51A7CF883048B90");

                    b.ToTable("GameRace");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Core.GameRealm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<uint>("GameId")
                        .HasColumnName("gameId")
                        .HasColumnType("INT UNSIGNED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.ToTable("GameRealm");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.GameCharacterSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("discr")
                        .IsRequired()
                        .HasColumnName("discr")
                        .HasColumnType("char(15)");

                    b.HasKey("Id");

                    b.ToTable("GameCharacterSource");

                    b.HasDiscriminator<string>("discr").HasValue("GameCharacterSource");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.GameCharacterSyncSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnName("endTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FromTime")
                        .HasColumnName("fromTime")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("GameCharacterSourceId")
                        .HasColumnName("gameCharacterSourceId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("Log")
                        .HasColumnName("log")
                        .HasColumnType("LONGTEXT")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterSourceId")
                        .HasName("IDX_EC73362CDD71BB");

                    b.ToTable("GameCharacterSyncSession");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.TrackedBy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnName("endTime")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FromTime")
                        .HasColumnName("fromTime")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("GameCharacterId")
                        .HasColumnName("gameCharacterId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid>("GameCharacterSourceId")
                        .HasColumnName("gameCharacterSourceId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterId")
                        .HasName("IDX_C2316E125AF690F3");

                    b.HasIndex("GameCharacterSourceId")
                        .HasName("IDX_C2316E122CDD71BB");

                    b.ToTable("TrackedBy");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnName("displayName")
                        .HasColumnType("varchar(35)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(180)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("ExternalId")
                        .HasColumnName("externalId")
                        .HasColumnType("varchar(127)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique()
                        .HasName("UNIQ_B28B6F38A0D96FBF");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UNIQ_B28B6F3892FC23A8");

                    b.HasIndex("ExternalId")
                        .IsUnique()
                        .HasName("UNIQ_B28B6F38C05FB297");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Queues.ActivityQueueItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid?>("ActivityById")
                        .HasColumnName("activityById")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime>("ActivityOn")
                        .HasColumnName("activityOn")
                        .HasColumnType("DATETIME");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnName("activityType")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime?>("ProcessedOn")
                        .HasColumnName("processedOn")
                        .HasColumnType("DATETIME");

                    b.Property<string>("RawData")
                        .HasColumnName("rawData")
                        .HasColumnType("LONGTEXT")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("ActivityById")
                        .HasName("IDX_8A274BCA93C757EE");

                    b.ToTable("ActivityQueueItem");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Queues.NotificationQueueItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<Guid?>("ActivityById")
                        .HasColumnName("activityById")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime>("ActivityOn")
                        .HasColumnName("activityOn")
                        .HasColumnType("DATETIME");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnName("activityType")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime?>("ProcessedOn")
                        .HasColumnName("processedOn")
                        .HasColumnType("DATETIME");

                    b.Property<string>("RawData")
                        .HasColumnName("rawData")
                        .HasColumnType("LONGTEXT")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("ActivityById")
                        .HasName("IDX_C656D44393C757EE");

                    b.ToTable("NotificationQueueItem");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.CalendarExport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<bool>("ExportAbsence")
                        .HasColumnName("exportAbsence")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ExportNew")
                        .HasColumnName("exportNew")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnName("secret")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasName("IDX_6E28848862DEB3E8");

                    b.ToTable("CalendarExport");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.FeatureToggle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasColumnName("feature")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<bool>("Toggle")
                        .HasColumnName("toggle")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ToggleForId")
                        .HasColumnName("toggleForId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("ToggleForId")
                        .HasName("IDX_D25E05DD612E729E");

                    b.ToTable("FeatureToggle");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("value")
                        .HasColumnType("varchar(2048)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasName("IDX_50C9810462DEB3E8");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Telemetry.FeatureUse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasColumnName("feature")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("RawData")
                        .HasColumnName("rawData")
                        .HasColumnType("LONGTEXT")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid?>("UsedById")
                        .HasColumnName("usedById")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime>("UsedOn")
                        .HasColumnName("usedOn")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("UsedById")
                        .HasName("IDX_E504F432FCEF271C");

                    b.ToTable("FeatureUse");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Telemetry.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("feedback")
                        .HasColumnType("LONGTEXT")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<Guid>("PostedById")
                        .HasColumnName("postedById")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnName("postedOn")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("PostedById")
                        .HasName("IDX_2B5F260E9DD8CB47");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Telemetry.MailSend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("CHAR(36)");

                    b.Property<string>("FromAddress")
                        .IsRequired()
                        .HasColumnName("fromAddress")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<DateTime>("SendOn")
                        .HasColumnName("sendOn")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnName("subject")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.Property<string>("ToAddress")
                        .IsRequired()
                        .HasColumnName("toAddress")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasKey("Id");

                    b.ToTable("MailSend");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.Guild.GameGuildSync", b =>
                {
                    b.HasBaseType("LaDanse.Target.Entities.GameData.Sync.GameCharacterSource");

                    b.Property<Guid>("GameGuildId")
                        .HasColumnName("gameGuildId")
                        .HasColumnType("CHAR(36)");

                    b.HasIndex("GameGuildId")
                        .HasName("IDX_18BD775675407DAB");

                    b.HasDiscriminator().HasValue("GuildSync");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.Profile.ProfileSync", b =>
                {
                    b.HasBaseType("LaDanse.Target.Entities.GameData.Sync.GameCharacterSource");

                    b.Property<Guid>("UserId")
                        .HasColumnName("userId")
                        .HasColumnType("CHAR(36)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_unicode_ci");

                    b.HasIndex("UserId")
                        .HasName("IDX_70D670C87D3656A4");

                    b.HasDiscriminator().HasValue("ProfileSync");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaim", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameCharacter", "GameCharacter")
                        .WithMany()
                        .HasForeignKey("GameCharacterId")
                        .HasConstraintName("FK_E115ED785AF690F3")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_E115ED7862DEB3E8")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaimVersion", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaim", "GameCharacterClaim")
                        .WithMany()
                        .HasForeignKey("GameCharacterClaimId")
                        .HasConstraintName("FK_C33F42E09113A92D")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.PlaysGameRole", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaim", "GameCharacterClaim")
                        .WithMany()
                        .HasForeignKey("GameCharacterClaimId")
                        .HasConstraintName("FK_7A9E9B239113A92D")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Comments.Comment", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Comments.CommentGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_5BC96BF0ED8188B0")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "Poster")
                        .WithMany()
                        .HasForeignKey("PosterId")
                        .HasConstraintName("FK_5BC96BF0581A197")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.Event", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Comments.CommentGroup", "CommentGroup")
                        .WithMany()
                        .HasForeignKey("CommentGroupId")
                        .HasConstraintName("FK_FA6F25A34BDD4B9")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "Organiser")
                        .WithMany()
                        .HasForeignKey("OrganiserId")
                        .HasConstraintName("FK_FA6F25A34BDD3C8")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.SignUp", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Events.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_DC8B3F7B2B2EBB6C")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_DC8B3F7B62DEB3E8")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.SignedForGameRole", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Events.SignUp", "SignUp")
                        .WithMany()
                        .HasForeignKey("SignUpId")
                        .HasConstraintName("FK_16186B55A966702F")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Forum", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "LastPostPoster")
                        .WithMany()
                        .HasForeignKey("LastPostPosterId")
                        .HasConstraintName("FK_44EA91C922F0147C");

                    b.HasOne("LaDanse.Target.Entities.Forums.Topic", "LastPostTopic")
                        .WithMany()
                        .HasForeignKey("LastPostTopicId")
                        .HasConstraintName("FK_44EA91C91CA16452");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.ForumLastVisit", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_F17408662DEB3E8")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Post", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "Poster")
                        .WithMany()
                        .HasForeignKey("PosterId")
                        .HasConstraintName("FK_FAB8C3B3581A197")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Forums.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .HasConstraintName("FK_FAB8C3B3E2E0EAFB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Topic", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Forums.Forum", "Forum")
                        .WithMany()
                        .HasForeignKey("ForumId")
                        .HasConstraintName("FK_5C81F11F7830F151")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "LastPostPoster")
                        .WithMany()
                        .HasForeignKey("LastPostPosterId")
                        .HasConstraintName("FK_5C81F11F22F0147C");

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "Poster")
                        .WithMany()
                        .HasForeignKey("PosterId")
                        .HasConstraintName("FK_5C81F11F581A197")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.UnreadPost", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Forums.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK_6B0B9B3EE094D20D")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_6B0B9B3E62DEB3E8")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameCharacter", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Core.GameRealm", "GameRealm")
                        .WithMany()
                        .HasForeignKey("GameRealmId")
                        .HasConstraintName("FK_92AF3B34FA96DBDA")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameCharacterVersion", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameCharacter", "GameCharacter")
                        .WithMany()
                        .HasForeignKey("GameCharacterId")
                        .HasConstraintName("FK_A70EBD185AF690F3")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.GameData.Core.GameClass", "GameClass")
                        .WithMany()
                        .HasForeignKey("GameClassId")
                        .HasConstraintName("FK_A70EBD18F3B4E37B")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.GameData.Core.GameRace", "GameRace")
                        .WithMany()
                        .HasForeignKey("GameRaceId")
                        .HasConstraintName("FK_A70EBD18E036C39A")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameGuild", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Core.GameRealm", "GameRealm")
                        .WithMany()
                        .HasForeignKey("GameRealmId")
                        .HasConstraintName("FK_B48152AFFA96DBDA")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.InGameGuild", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameCharacter", "GameCharacter")
                        .WithMany()
                        .HasForeignKey("GameCharacterId")
                        .HasConstraintName("FK_CA2244C5AF690F3")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameGuild", "GameGuild")
                        .WithMany()
                        .HasForeignKey("GameGuildId")
                        .HasConstraintName("FK_CA2244C75407DAB")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Core.GameRace", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Core.GameFaction", "GameFaction")
                        .WithMany()
                        .HasForeignKey("GameFactionId")
                        .HasConstraintName("FK_D51A7CF883048B90")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.GameCharacterSyncSession", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Sync.GameCharacterSource", "GameCharacterSource")
                        .WithMany()
                        .HasForeignKey("GameCharacterSourceId")
                        .HasConstraintName("FK_EC73362CDD71BB")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.TrackedBy", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameCharacter", "GameCharacter")
                        .WithMany()
                        .HasForeignKey("GameCharacterId")
                        .HasConstraintName("FK_C2316E125AF690F3")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.GameData.Sync.GameCharacterSource", "GameCharacterSource")
                        .WithMany()
                        .HasForeignKey("GameCharacterSourceId")
                        .HasConstraintName("FK_C2316E122CDD71BB")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Queues.ActivityQueueItem", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "ActivityBy")
                        .WithMany()
                        .HasForeignKey("ActivityById")
                        .HasConstraintName("FK_8A274BCA93C757EE");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Queues.NotificationQueueItem", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "ActivityBy")
                        .WithMany()
                        .HasForeignKey("ActivityById")
                        .HasConstraintName("FK_C656D44393C757EE");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.CalendarExport", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_6E28848862DEB3E8")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.FeatureToggle", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "ToggleFor")
                        .WithMany()
                        .HasForeignKey("ToggleForId")
                        .HasConstraintName("FK_D25E05DD612E729E")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.Setting", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_50C9810462DEB3E8")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Telemetry.FeatureUse", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "UsedBy")
                        .WithMany()
                        .HasForeignKey("UsedById")
                        .HasConstraintName("FK_E504F432FCEF271C");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Telemetry.Feedback", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "PostedBy")
                        .WithMany()
                        .HasForeignKey("PostedById")
                        .HasConstraintName("FK_2B5F260E9DD8CB47")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.Guild.GameGuildSync", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameGuild", "GameGuild")
                        .WithMany()
                        .HasForeignKey("GameGuildId")
                        .HasConstraintName("FK_18BD775675407DAB")
                        .IsRequired();
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.Profile.ProfileSync", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_70D670C87D3656A4")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
